apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Customers\Commit\Kompose\kompose.exe convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: superset-tests-worker
  name: superset-tests-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: superset-tests-worker
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Customers\Commit\Kompose\kompose.exe convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: superset-tests-worker
    spec:
      containers:
      - args:
        - /app/docker/docker-bootstrap.sh
        - worker
        env:
        - name: COMPOSE_PROJECT_NAME
          valueFrom:
            configMapKeyRef:
              key: COMPOSE_PROJECT_NAME
              name: docker--env
        - name: CYPRESS_CONFIG
          valueFrom:
            configMapKeyRef:
              key: CYPRESS_CONFIG
              name: docker--env
        - name: DATABASE_DB
          valueFrom:
            configMapKeyRef:
              key: DATABASE_DB
              name: docker--env
        - name: DATABASE_DIALECT
          valueFrom:
            configMapKeyRef:
              key: DATABASE_DIALECT
              name: docker--env
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              key: DATABASE_HOST
              name: docker--env
        - name: DATABASE_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: DATABASE_PASSWORD
              name: docker--env
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              key: DATABASE_PORT
              name: docker--env
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              key: DATABASE_USER
              name: docker--env
        - name: FLASK_ENV
          valueFrom:
            configMapKeyRef:
              key: FLASK_ENV
              name: docker--env
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_DB
              name: docker--env
        - name: POSTGRES_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: docker--env
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_USER
              name: docker--env
        - name: PYTHONPATH
          valueFrom:
            configMapKeyRef:
              key: PYTHONPATH
              name: docker--env
        - name: REDIS_CELERY_DB
          value: "2"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: docker--env
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: REDIS_PORT
              name: docker--env
        - name: REDIS_RESULTS_DB
          value: "3"
        - name: SUPERSET_ENV
          valueFrom:
            configMapKeyRef:
              key: SUPERSET_ENV
              name: docker--env
        - name: SUPERSET_LOAD_EXAMPLES
          valueFrom:
            configMapKeyRef:
              key: SUPERSET_LOAD_EXAMPLES
              name: docker--env
        - name: SUPERSET_PORT
          valueFrom:
            configMapKeyRef:
              key: SUPERSET_PORT
              name: docker--env
        image: apache/superset:latest-dev
        imagePullPolicy: ""
        name: superset-tests-worker
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
